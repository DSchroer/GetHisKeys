<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_actor</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited()
vvelocity = 0;
hvelocity = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Calculate Base Movement
var drag = 0.25;
var max_speed = 2;
var accel = 0.25;

if(keyboard_check(vk_up) &amp;&amp; !keyboard_check(vk_down))
{
    vvelocity -= accel;
}else if(keyboard_check(vk_down) &amp;&amp; !keyboard_check(vk_up))
{
    vvelocity += accel;
}else{
    if(vvelocity &lt; drag &amp;&amp; vvelocity &gt; -drag)
    {
        vvelocity = 0;
    }else{
        if(vvelocity &gt; 0)
        {
            vvelocity -= drag;
        }else{
            vvelocity += drag;
        }
    }
}

if(vvelocity &gt; max_speed)
{
    vvelocity = max_speed;
}else if(vvelocity &lt; -max_speed)
{
    vvelocity = -max_speed;
}

if(keyboard_check(vk_left) &amp;&amp; !keyboard_check(vk_right))
{
    hvelocity -= accel;
}else if(keyboard_check(vk_right) &amp;&amp; !keyboard_check(vk_left))
{
    hvelocity += accel;
}else{
    if(hvelocity &lt; drag &amp;&amp; hvelocity &gt; -drag)
    {
        hvelocity = 0;
    }else{
        if(hvelocity &gt; 0)
        {
            hvelocity -= drag;
        }else{
            hvelocity += drag;
        }
    }
}

if(hvelocity &gt; max_speed)
{
    hvelocity = max_speed;
}else if(hvelocity &lt; -max_speed)
{
    hvelocity = -max_speed;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Check Collision

var radius = 7;

if(collision_circle(x, y + vvelocity, radius, obj_collidable, true, true))
{
    vvelocity = 0;
}

if(collision_circle(x + hvelocity, y, radius, obj_collidable, true, true))
{
    hvelocity = 0;
}

if(collision_circle(x + hvelocity, y + vvelocity, radius, obj_collidable, true, true))
{
    vvelocity = 0;
    hvelocity = 0;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Rotate Sprite
var threshold = 0.25;
if(abs(hvelocity) &gt; threshold || abs(vvelocity) &gt; threshold)
{
    if(keyboard_check(vk_up) || keyboard_check(vk_down) || keyboard_check(vk_left) || keyboard_check(vk_right))
    {
        image_angle = point_direction(x,y,x+hvelocity, y+vvelocity)
    }
}else{
    var px = x, py = y;
    if(keyboard_check(vk_up) &amp;&amp; !keyboard_check(vk_down))
    {
        py = y - 1;
    }else if(keyboard_check(vk_down) &amp;&amp; !keyboard_check(vk_up))
    {
        py = y + 1;
    }

    if(keyboard_check(vk_left) &amp;&amp; !keyboard_check(vk_right))
    {
        px = x - 1;
    }else if(keyboard_check(vk_right) &amp;&amp; !keyboard_check(vk_left))
    {
        px = x + 1;
    }
    
    if(px != x || py != y)
    {
        image_angle = point_direction(x,y,px,py)
    }
    
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Check Forces
var force_len = 16;

var obj = collision_line(x,y,x+lengthdir_x(force_len,image_angle), y+lengthdir_y(force_len,image_angle), obj_actor, true, true)
if(obj != noone)
{
    if(instance_number(obj_select) == 0)
    {
        var inst = instance_create(obj.x, obj.y, obj_select);
    }else{
        obj_select.x = obj.x
        obj_select.y = obj.y
    }
    
}else{
    if(instance_number(obj_select) != 0)
    {
        with(obj_select)
        {
            instance_destroy()
        }
    }
}

if(keyboard_check_pressed(ord('Z')))
{
    
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Move
x += hvelocity;
y += vvelocity;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="27">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>game_end()
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
